{"version":3,"sources":["hooks/form.js","context/Settings.jsx","context/AuthContext.jsx","components/auth/Auth.jsx","components/todo/todo-component/List.jsx","components/todo/todo-component/TodoForm.jsx","components/todo/todo.jsx","components/auth/Login.jsx","components/auth/Sign.jsx","components/Header.jsx","components/todo/settings.jsx","app.js","index.js"],"names":["useForm","callback","useState","values","setValues","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","settingContext","React","createContext","settings","display","numberOfItems","defaultSortField","reducer","state","action","type","payload","Settings","props","useReducer","dispatch","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","Provider","children","authContext","testUsers","admin","password","role","capabilities","editor","writer","AuthComponents","loggedIn","can","user","capability","includes","login","username","validateToken","jwt","sign","process","logout","setLoginState","sigIn","setState","token","verify","e","console","log","cookie","save","qs","URLSearchParams","window","location","search","cookieToken","load","get","Auth","context","useContext","isLoggedIn","canDo","okToRender","condition","List","list","toggleComplete","setIncomplete","incomplete","deleteItem","auth","pagination","setPagination","renderList","item","interactive","elevation","Elevation","TWO","style","width","maxHeight","minHeight","margin","text","onClick","id","className","complete","disabled","assignee","difficulty","color","appearance","incompleteCount","filter","length","document","title","sort","a","b","slice","map","number","filtered","btn","arr","i","push","makePagination","TodoForm","range","setRange","onSubmit","helperText","FormGroup","FormGroupFor","FormGroupInfo","onChange","placeholder","min","max","ToDo","setList","uuid","Date","getTime","todoFormProps","height","marginTop","align","Alignment","LEFT","Heading","fontSize","items","Login","createNewUser","Button","Form","layout","Group","controlId","ControlLabel","Control","autoComplete","styles","justifyContent","alignItems","SigIn","Panel","HelpText","ButtonToolbar","Header","newUser","backgroundColor","to","Sign","data","label","FlexboxGrid","justify","Item","colspan","fluid","SelectPicker","Toggle","checked","Slider","step","graduated","progress","renderMark","mark","header","bordered","size","index","App","path","element","Component","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1ed4b237.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst useForm = (callback) => {\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues((values) => ({\n      ...values,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n","import React, { useEffect, useReducer } from \"react\";\nexport const settingContext = React.createContext();\nexport const settings = {\n  display: true,\n  numberOfItems: 2,\n  defaultSortField: \"id\",\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"display\":\n      return { ...state, display: action.payload };\n    case \"numberOfItems\":\n      return { ...state, numberOfItems: action.payload };\n    case \"defaultSortField\":\n      return { ...state, defaultSortField: action.payload };\n    default:\n      return state;\n  }\n};\nconst Settings = (props) => {\n  const [state, dispatch] = useReducer(reducer, {});\n  useEffect(() => {\n    const { display, numberOfItems, defaultSortField } =\n      JSON.parse(localStorage.getItem(\"settings\")) || settings;\n    dispatch({ type: \"numberOfItems\", payload: numberOfItems });\n    dispatch({ type: \"display\", payload: display });\n    dispatch({ type: \"defaultSortField\", payload: defaultSortField });\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"settings\", JSON.stringify(state));\n  }, [state]);\n  return (\n    <settingContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </settingContext.Provider>\n  );\n};\n\nexport default Settings;\n","import React from \"react\";\nimport cookie from \"react-cookies\";\nimport jwt from \"jsonwebtoken\";\nimport { createContext } from \"react\";\n\nexport const authContext = createContext();\n\nconst testUsers = {\n  admin: {\n    password: \"password\",\n    name: \"Administrator\",\n    role: \"admin\",\n    capabilities: [\"create\", \"read\", \"update\", \"delete\"],\n  },\n  editor: {\n    password: \"password\",\n    name: \"Editor\",\n    role: \"editor\",\n    capabilities: [\"read\", \"update\"],\n  },\n  writer: {\n    password: \"password\",\n    name: \"Writer\",\n    role: \"writer\",\n    capabilities: [\"create\", \"read\"],\n  },\n};\n\nconst AuthComponents = (props) => {\n  const [state, setState] = React.useState({\n    loggedIn: false,\n    can,\n    login,\n    logout,\n    sigIn,\n    user: { capabilities: [] },\n  });\n  function can(user, capability) {\n    return user?.capabilities?.includes(capability);\n  }\n\n  function login(username, password) {\n    if (testUsers[username]) {\n      // Create a \"good\" token, like you'd get from a server\n      const token = jwt.sign(testUsers[username], process.env.REACT_APP_SECRET);\n      validateToken(token);\n    }\n  }\n\n  function logout() {\n    setLoginState(false, null, {});\n  }\n\n  function validateToken(token) {\n    try {\n      let user = jwt.verify(token, process.env.REACT_APP_SECRET);\n      setLoginState(true, token, user);\n    } catch (e) {\n      setLoginState(false, null, {});\n      console.log(\"Token Validation Error\", e);\n    }\n  }\n  function sigIn(username, password) {\n    if (testUsers[username] && testUsers[username].password === password) {\n      // Create a \"good\" token, like you'd get from a server\n      // call api  await superagent.post(`${API}/signin`).set('authorization', `Basic ${base64.encode(`${username}:${password}`)}`);\n      // setLoginState(true, token, user);\n    }\n  }\n\n  function setLoginState(loggedIn, token, user) {\n    cookie.save(\"auth\", token);\n    setState({ ...state, token, loggedIn, user });\n  }\n\n  React.useEffect(() => {\n    const qs = new URLSearchParams(window.location.search);\n    const cookieToken = cookie.load(\"auth\");\n    const token = qs.get(\"token\") || cookieToken || null;\n    validateToken(token);\n  }, []);\n\n  return (\n    <authContext.Provider value={state}>{props.children}</authContext.Provider>\n  );\n};\n\nexport default AuthComponents;\n","import React from \"react\";\nimport { When } from \"react-if\";\n\nimport { authContext } from \"../../context/AuthContext.jsx\";\n\nconst Auth = (props) => {\n  const context = React.useContext(authContext);\n  const isLoggedIn = context.loggedIn;\n  const canDo = props.capability\n    ? context.can(context.user, props.capability)\n    : true;\n  const okToRender = isLoggedIn && canDo;\n  return <When condition={okToRender}>{props.children}</When>;\n};\n\nexport default Auth;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { settingContext } from \"../../../context/Settings\";\nimport { Button, Card, Elevation } from \"@blueprintjs/core\";\nimport { authContext } from \"../../../context/AuthContext\";\nimport \"rsuite/dist/rsuite.min.css\";\nimport Auth from \"../../auth/Auth\";\nimport { If, Else } from \"react-if\";\nfunction List({ list, toggleComplete, setIncomplete, incomplete, deleteItem }) {\n  const settings = useContext(settingContext);\n  const auth = useContext(authContext);\n  const [pagination, setPagination] = useState(settings.state.numberOfItems);\n  const renderList = (item) => {\n    return (\n      <Card\n        interactive={true}\n        elevation={Elevation.TWO}\n        key={item.id}\n        style={{\n          width: \"100%\",\n          maxHeight: \"80%\",\n          minHeight: \"40%\",\n          margin: \"0.5rem\",\n        }}\n        aria-label={`${item.text}`}\n      >\n        <If condition={auth.can(auth.user, \"update\")}>\n          <div\n            onClick={() => toggleComplete(item.id)}\n            className={`${\n              item.complete ? \"Complete\" : \"notComplete\"\n            } isComplete`}\n          >\n            <span>{item.complete ? \"Complete\" : \"pending\"}</span>\n          </div>\n          <Else>\n            <Button\n              disabled\n              className={`${\n                item.complete ? \"Complete\" : \"notComplete\"\n              } isComplete`}\n            >\n              <span>{item.complete ? \"Complete\" : \"pending\"}</span>\n            </Button>\n          </Else>\n        </If>\n\n        <p className={\"assignee\"}>{item.assignee}</p>\n        <p className={\"task\"}>{item.text}</p>\n        <p className=\"Difficulty\">\n          <small>Difficulty: {item.difficulty}</small>\n        </p>\n        <Auth capability=\"delete\">\n          <Button\n            color=\"red\"\n            appearance=\"primary\"\n            onClick={() => deleteItem(item.id)}\n          >\n            Delete\n          </Button>\n        </Auth>\n      </Card>\n    );\n  };\n  const makePagination = (list, number, filtered) => {\n    const btn = [];\n    let arr = [];\n    if (filtered) arr = list.filter((item) => item.complete === false);\n    else arr = list;\n    for (let i = 0; i < arr.length / number; i++) {\n      btn.push(\n        <Button\n          key={i}\n          onClick={() => {\n            setPagination((i + 1) * number);\n          }}\n        >\n          {i + 1}\n        </Button>\n      );\n    }\n    return btn;\n  };\n  useEffect(() => {\n    let incompleteCount = list.filter((item) => !item.complete);\n    setIncomplete(incompleteCount.length);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n\n  useEffect(() => {\n    setPagination(settings.state.numberOfItems);\n  }, [settings.state.numberOfItems]);\n\n  return (\n    <div>\n      {settings.state.display\n        ? list\n            .sort(\n              (a, b) =>\n                a[settings.state.defaultSortField] -\n                b[settings.state.defaultSortField]\n            )\n            .slice(pagination - settings.state.numberOfItems, pagination)\n            .map((item) => renderList(item))\n        : list\n            .filter((item) => !item.complete)\n            .sort(\n              (a, b) =>\n                a[settings.state.defaultSortField] -\n                b[settings.state.defaultSortField]\n            )\n            .slice(pagination - settings.state.numberOfItems, pagination)\n            .map((item) => renderList(item))}\n      <div>\n        {makePagination(\n          list.sort(\n            (a, b) =>\n              a[settings.state.defaultSortField] -\n              b[settings.state.defaultSortField]\n          ),\n          settings.state.numberOfItems,\n          !settings.state.display\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default List;\n","import React from \"react\";\nimport { Button, FormGroup, InputGroup } from \"@blueprintjs/core\";\n\nfunction TodoForm({ handleChange, handleSubmit, range, setRange }) {\n  return (\n    <div>\n      <form onSubmit={handleSubmit} aria-label=\"todo-form\">\n        <h2>Add To Do Item</h2>\n        <FormGroup\n          helperText=\"To Do Item details...\"\n          FormGroup=\"To Do Item\"\n          FormGroupFor=\"ToDoItem\"\n          FormGroupInfo=\"(required)\"\n        >\n          <span>To Do Item</span>\n          <InputGroup\n            id=\"ToDoItem\"\n            onChange={handleChange}\n            name=\"text\"\n            type=\"text\"\n            placeholder=\"Item Details\"\n            aria-label=\"text\"\n          />\n        </FormGroup>\n\n        <FormGroup\n          helperText=\"Assigned To\"\n          FormGroup=\"Assigned To\"\n          FormGroupFor=\"Assigned To\"\n          FormGroupInfo=\"(required)\"\n        >\n          <InputGroup\n            onChange={handleChange}\n            name=\"assignee\"\n            type=\"text\"\n            placeholder=\"Assignee Name\"\n            aria-label=\"assignee\"\n          />\n        </FormGroup>\n\n        <FormGroup\n          helperText=\"Difficulty\"\n          FormGroup=\"Difficulty\"\n          FormGroupFor=\"Difficulty\"\n          FormGroupInfo=\"(required)\"\n        >\n          <InputGroup\n            onChange={(e) => {\n              setRange(e.target.value);\n              handleChange(e);\n            }}\n            value={range}\n            type=\"range\"\n            min={1}\n            max={5}\n            name=\"difficulty\"\n            placeholder=\"Difficulty\"\n            aria-label=\"range\"\n          />\n        </FormGroup>\n        <Button type=\"submit\">Add Item</Button>\n      </form>\n    </div>\n  );\n}\n\nexport default TodoForm;\n","import React, { useState } from \"react\";\nimport useForm from \"../../hooks/form.js\";\nimport \"./todo.scss\";\nimport { v4 as uuid } from \"uuid\";\nimport List from \"./todo-component/List\";\nimport { Alignment, Navbar } from \"@blueprintjs/core\";\nimport TodoForm from \"./todo-component/TodoForm.jsx\";\nimport Auth from \"../auth/Auth.jsx\";\n\nconst ToDo = () => {\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const [range, setRange] = useState(3);\n  const { handleChange, handleSubmit } = useForm(addItem);\n\n  function addItem(item) {\n    item.id = uuid() + new Date().getTime();\n    item.complete = false;\n    item.difficulty = item.difficulty ? item.difficulty : range;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter((item) => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n    const items = list.map((item) => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n  }\n  const todoFormProps = {\n    handleChange,\n    handleSubmit,\n    range,\n    setRange,\n  };\n  return (\n    <>\n      <Navbar\n        className=\"bp3-navbar bp3-dark\"\n        style={{\n          height: \"4rem\",\n          margin: \"0 auto\",\n          width: \"80%\",\n          marginTop: \"1rem\",\n        }}\n        align={Alignment.LEFT}\n      >\n        <Navbar.Heading\n          className=\"bp3-navbar-group bp3-align-left\"\n          style={{ fontSize: \"1.5rem\" }}\n        >\n          To Do List: {incomplete} items pending\n        </Navbar.Heading>\n      </Navbar>\n      <div className=\"todo-container\">\n        <div className=\"todo-form\">\n          <Auth capability=\"create\">\n            <TodoForm {...todoFormProps} />\n          </Auth>\n        </div>\n        <div className=\"todo-list\">\n          <List\n            list={list}\n            toggleComplete={toggleComplete}\n            setIncomplete={setIncomplete}\n            incomplete={incomplete}\n            deleteItem={deleteItem}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from \"react\";\nimport { When } from \"react-if\";\nimport { Button, Form } from \"rsuite\";\nimport { authContext } from \"../../context/AuthContext\";\n\nconst Login = ({ createNewUser }) => {\n  const context = React.useContext(authContext);\n  const [state, setState] = React.useState({ username: \"\", password: \"\" });\n\n  const handleChange = (e, name) => {\n    setState({ ...state, [name]: e });\n  };\n\n  const handleSubmit = (e) => {\n    context.login(state.username, state.password);\n  };\n  return (\n    <>\n      <When condition={context.loggedIn}>\n        <Button onClick={context.logout}>Log Out</Button>\n      </When>\n\n      <When condition={!context.loggedIn}>\n        <Form layout=\"inline\" onSubmit={handleSubmit}>\n          <Form.Group controlId=\"username\">\n            <Form.ControlLabel>Username</Form.ControlLabel>\n            <Form.Control\n              style={{ width: 160 }}\n              placeholder=\"UserName\"\n              name=\"username\"\n              onChange={(e) => handleChange(e, \"username\")}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.ControlLabel>Password</Form.ControlLabel>\n            <Form.Control\n              name=\"password\"\n              autoComplete=\"off\"\n              style={{ width: 160 }}\n              placeholder=\"password\"\n              type={context.loggedIn ? \"text\" : \"password\"}\n              onChange={(e) => handleChange(e, \"password\")}\n            />\n          </Form.Group>\n\n          <Button type=\"submit\">Login</Button>\n          <Button onClick={() => createNewUser(false)}>Sign in</Button>\n        </Form>\n      </When>\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { When } from \"react-if\";\nimport { Button, ButtonToolbar, Form, Panel } from \"rsuite\";\nimport { authContext } from \"../../context/AuthContext\";\nconst styles = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\nconst SigIn = ({ createNewUser }) => {\n  const context = React.useContext(authContext);\n  const [state, setState] = React.useState({ username: \"\", password: \"\" });\n\n  const handleChange = (e, name) => {\n    setState({ ...state, [name]: e });\n  };\n\n  const handleSubmit = (e) => {\n    context.sigIn(state.username, state.password);\n  };\n  return (\n    <>\n      <When condition={context.loggedIn}>\n        <Button onClick={context.logout}>Log Out</Button>\n      </When>\n\n      <When condition={!context.loggedIn}>\n        <Panel style={{ ...styles }}>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"name\">\n              <Form.ControlLabel>Username</Form.ControlLabel>\n              <Form.Control\n                name=\"username\"\n                onChange={(e) => handleChange(e, \"username\")}\n              />\n              <Form.HelpText>Username is required</Form.HelpText>\n            </Form.Group>\n\n            <Form.Group controlId=\"password\">\n              <Form.ControlLabel>Password</Form.ControlLabel>\n              <Form.Control\n                name=\"password\"\n                onChange={(e) => handleChange(e, \"password\")}\n                type=\"password\"\n                autoComplete=\"off\"\n              />\n            </Form.Group>\n            <Form.Group>\n              <ButtonToolbar>\n                <Button appearance=\"primary\">Submit</Button>\n                <Button\n                  appearance=\"default\"\n                  onClick={() => createNewUser(true)}\n                >\n                  Cancel\n                </Button>\n              </ButtonToolbar>\n            </Form.Group>\n          </Form>\n        </Panel>\n      </When>\n    </>\n  );\n};\n\nexport default SigIn;\n","import { Alignment, Navbar } from \"@blueprintjs/core\";\nimport React from \"react\";\nimport { Else, If } from \"react-if\";\nimport { Link } from \"react-router-dom\";\nimport Login from \"./auth/Login\";\nimport Sign from \"./auth/Sign\";\n\nfunction Header() {\n  const [newUser, createNewUser] = React.useState(false);\n  return (\n    <Navbar\n      className=\"bp3-navbar\"\n      style={{ height: \"4rem\", backgroundColor: \"#227BFF\" }}\n      align={Alignment.LEFT}\n    >\n      <Navbar.Heading\n        className=\"bp3-navbar-group bp3-align-left\"\n        style={{ fontSize: \"1.5rem\" }}\n      >\n        <Link style={{ color: \"#fff\" }} to=\"/\">\n          home\n        </Link>\n      </Navbar.Heading>\n      <Navbar.Heading\n        className=\"bp3-navbar-group bp3-align-left\"\n        style={{ fontSize: \"1.5rem\" }}\n      >\n        <Link style={{ color: \"#fff\" }} to=\"/settings\">\n          settings\n        </Link>\n      </Navbar.Heading>\n      <Navbar.Heading\n        className=\"bp3-navbar-group bp3-align-right\"\n        style={{ color: \"#fff\", alignItems: \"baseline\" }}\n      >\n        <If condition={newUser}>\n          <Login createNewUser={createNewUser} />\n          <Else>\n            <Sign createNewUser={createNewUser} />\n          </Else>\n        </If>\n      </Navbar.Heading>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import React, { useContext } from \"react\";\nimport {\n  FlexboxGrid,\n  Form,\n  List,\n  Panel,\n  SelectPicker,\n  Slider,\n  Toggle,\n} from \"rsuite\";\nimport { settingContext, settings } from \"../../context/Settings\";\nimport \"rsuite/dist/rsuite.min.css\";\nconst data = [\n  {\n    label: \"assigned\",\n    value: \"assigned\",\n    role: \"assigned\",\n  },\n  {\n    label: \"id\",\n    value: \"id\",\n    role: \"id\",\n  },\n  {\n    label: \"difficulty\",\n    value: \"difficulty\",\n    role: \"difficulty\",\n  },\n];\n\nfunction Settings() {\n  const { state, dispatch } = useContext(settingContext);\n  return (\n    <div>\n      <FlexboxGrid justify=\"space-around\" align=\"middle\">\n        <FlexboxGrid.Item colspan={9}>\n          <Form\n            fluid\n            style={{ marginTop: \"10px\" }}\n            onSubmit={(e) => {\n              e.preventDefault();\n            }}\n          >\n            <Form.Group controlId=\"filter\">\n              <Form.ControlLabel>Filter by: </Form.ControlLabel>\n              <SelectPicker\n                data={data}\n                style={{ width: 224 }}\n                name=\"filter\"\n                onChange={(e) => {\n                  dispatch({ type: \"defaultSortField\", payload: e });\n                }}\n                value={state.defaultSortField || settings.defaultSortField}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"display\">\n              <Form.ControlLabel>display complete To Do: </Form.ControlLabel>\n              <Toggle\n                onChange={(e) => {\n                  dispatch({ type: \"display\", payload: e });\n                }}\n                name={\"display\"}\n                checked={state.display}\n                value={state.display || settings.display}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"slider\">\n              <Form.ControlLabel>show Item: </Form.ControlLabel>\n              <Slider\n                data-testid=\"slider\"\n                min={1}\n                step={1}\n                max={10}\n                graduated\n                progress\n                renderMark={(mark) => {\n                  return mark;\n                }}\n                value={state.numberOfItems || settings.numberOfItems}\n                onChange={(e) => {\n                  dispatch({ type: \"numberOfItems\", payload: e });\n                }}\n                name=\"slider\"\n              />\n            </Form.Group>\n          </Form>\n        </FlexboxGrid.Item>\n\n        <FlexboxGrid.Item colspan={6}>\n          <Panel header=\"your settings\" bordered>\n            <List size=\"sm\">\n              <List.Item key={3} index={3}>\n                sort by: {state.defaultSortField}\n              </List.Item>\n              <List.Item key={1} index={1}>\n                display complete To Do: {state.display ? \"✔️\" : \"❌\"}\n              </List.Item>\n              <List.Item key={2} index={2}>\n                number of Todo's in the same label: {state.numberOfItems}\n              </List.Item>\n            </List>\n          </Panel>\n        </FlexboxGrid.Item>\n      </FlexboxGrid>\n    </div>\n  );\n}\n\nexport default Settings;\n","import React from \"react\";\nimport ToDo from \"./components/todo/todo\";\nimport Settings from \"./context/Settings\";\nimport LoginContext from \"./context/AuthContext.jsx\";\nimport \"./app.scss\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport SettingsPage from \"./components/todo/settings\";\nimport \"rsuite/styles/index.less\"; // or 'rsuite/dist/rsuite.min.css'\nimport Auth from \"./components/auth/Auth\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <LoginContext>\n          <Header />\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <Auth>\n                  <Settings>\n                    <ToDo />\n                  </Settings>\n                </Auth>\n              }\n            />\n            <Route\n              path=\"/settings\"\n              element={\n                <Auth>\n                  <Settings>\n                    <SettingsPage />\n                  </Settings>\n                </Auth>\n              }\n            />\n          </Routes>\n        </LoginContext>\n      </BrowserRouter>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}