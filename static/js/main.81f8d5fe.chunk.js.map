{"version":3,"sources":["hooks/form.js","context/Settings.jsx","components/todo/List.jsx","components/todo/todo.jsx","components/Header.jsx","components/todo/settings.jsx","app.js","index.js"],"names":["useForm","callback","useState","values","setValues","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","settingContext","React","createContext","settings","display","numberOfItems","defaultSortField","reducer","state","action","type","payload","Settings","props","useReducer","dispatch","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","Provider","children","List","list","toggleComplete","setIncomplete","incomplete","useContext","pagination","setPagination","renderList","item","interactive","elevation","Elevation","TWO","style","width","maxHeight","minHeight","margin","onClick","id","className","complete","assignee","text","difficulty","incompleteCount","filter","length","document","title","sort","a","b","slice","map","number","filtered","btn","arr","i","push","makePagination","ToDo","setList","range","setRange","uuid","Date","getTime","height","marginTop","align","Alignment","LEFT","Heading","fontSize","onSubmit","helperText","FormGroup","FormGroupFor","FormGroupInfo","onChange","placeholder","e","min","max","items","Header","backgroundColor","color","to","data","label","role","FlexboxGrid","justify","Item","colspan","Form","fluid","Group","controlId","ControlLabel","SelectPicker","Toggle","checked","Slider","step","graduated","progress","renderMark","mark","Panel","header","bordered","size","index","App","path","element","Component","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.81f8d5fe.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst useForm = (callback) => {\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues((values) => ({\n      ...values,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n","import React, { useEffect, useReducer } from \"react\";\nexport const settingContext = React.createContext();\nconst settings = {\n  display: true,\n  numberOfItems: 2,\n  defaultSortField: \"id\",\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"display\":\n      return { ...state, display: action.payload };\n    case \"numberOfItems\":\n      return { ...state, numberOfItems: action.payload };\n    case \"defaultSortField\":\n      return { ...state, defaultSortField: action.payload };\n    default:\n      return state;\n  }\n};\nconst Settings = (props) => {\n  const [state, dispatch] = useReducer(reducer, {});\n  useEffect(() => {\n    const { display, numberOfItems, defaultSortField } =\n      JSON.parse(localStorage.getItem(\"settings\")) || settings;\n    dispatch({ type: \"numberOfItems\", payload: numberOfItems });\n    dispatch({ type: \"display\", payload: display });\n    dispatch({ type: \"defaultSortField\", payload: defaultSortField });\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"settings\", JSON.stringify(state));\n  }, [state]);\n  return (\n    <settingContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </settingContext.Provider>\n  );\n};\n\nexport default Settings;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { settingContext } from \"../../context/Settings\";\nimport { Button, Card, Elevation } from \"@blueprintjs/core\";\n\nfunction List({ list, toggleComplete, setIncomplete, incomplete }) {\n  const settings = useContext(settingContext);\n  const [pagination, setPagination] = useState(settings.state.numberOfItems);\n  const renderList = (item) => {\n    return (\n      <Card\n        interactive={true}\n        elevation={Elevation.TWO}\n        key={item.id}\n        style={{\n          width: \"100%\",\n          maxHeight: \"80%\",\n          minHeight: \"40%\",\n          margin: \"0.5rem\",\n        }}\n      >\n        <div\n          onClick={() => toggleComplete(item.id)}\n          className={`${item.complete ? \"Complete\" : \"notComplete\"} isComplete`}\n        >\n          <span>{item.complete ? \"Complete\" : \"pending\"}</span>\n        </div>\n        <p className={\"assignee\"}>{item.assignee}</p>\n        <p className={\"task\"}>{item.text}</p>\n        <p className=\"Difficulty\">\n          <small>Difficulty: {item.difficulty}</small>\n        </p>\n      </Card>\n    );\n  };\n  const makePagination = (list, number, filtered) => {\n    const btn = [];\n    let arr = [];\n    if (filtered) arr = list.filter((item) => item.complete === false);\n    else arr = list;\n    for (let i = 0; i < arr.length / number; i++) {\n      btn.push(\n        <Button\n          key={i}\n          onClick={() => {\n            setPagination((i + 1) * number);\n          }}\n        >\n          {i + 1}\n        </Button>\n      );\n    }\n    return btn;\n  };\n  useEffect(() => {\n    let incompleteCount = list.filter((item) => !item.complete);\n    setIncomplete(incompleteCount.length);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n\n  useEffect(() => {\n    setPagination(settings.state.numberOfItems);\n  }, [settings.state.numberOfItems]);\n\n  return (\n    <div>\n      {settings.state.display\n        ? list\n            .sort(\n              (a, b) =>\n                a[settings.state.defaultSortField] -\n                b[settings.state.defaultSortField]\n            )\n            .slice(pagination - settings.state.numberOfItems, pagination)\n            .map((item) => renderList(item))\n        : list\n            .filter((item) => !item.complete)\n            .sort(\n              (a, b) =>\n                a[settings.state.defaultSortField] -\n                b[settings.state.defaultSortField]\n            )\n            .slice(pagination - settings.state.numberOfItems, pagination)\n            .map((item) => renderList(item))}\n      <div>\n        {makePagination(\n          list\n            .filter((item) => !item.complete)\n            .sort(\n              (a, b) =>\n                a[settings.state.defaultSortField] -\n                b[settings.state.defaultSortField]\n            ),\n          settings.state.numberOfItems,\n          settings.state.display\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default List;\n","import React, { useState } from \"react\";\nimport useForm from \"../../hooks/form.js\";\nimport \"./todo.scss\";\nimport { v4 as uuid } from \"uuid\";\nimport List from \"./List\";\nimport {\n  Alignment,\n  Button,\n  FormGroup,\n  InputGroup,\n  Navbar,\n} from \"@blueprintjs/core\";\n\nconst ToDo = () => {\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const [range, setRange] = useState(3);\n  const { handleChange, handleSubmit } = useForm(addItem);\n\n  function addItem(item) {\n    item.id = uuid() + new Date().getTime();\n    item.complete = false;\n    item.difficulty = item.difficulty ? item.difficulty : range;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter((item) => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n    const items = list.map((item) => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n  }\n\n  return (\n    <>\n      <Navbar\n        className=\"bp3-navbar bp3-dark\"\n        style={{\n          height: \"4rem\",\n          margin: \"0 auto\",\n          width: \"80%\",\n          marginTop: \"1rem\",\n        }}\n        align={Alignment.LEFT}\n      >\n        <Navbar.Heading\n          className=\"bp3-navbar-group bp3-align-left\"\n          style={{ fontSize: \"1.5rem\" }}\n        >\n          To Do List: {incomplete} items pending\n        </Navbar.Heading>\n      </Navbar>\n      <div className=\"todo-container\">\n        <div className=\"todo-form\">\n          <form onSubmit={handleSubmit}>\n            <h2>Add To Do Item</h2>\n\n            <FormGroup\n              helperText=\"To Do Item details...\"\n              FormGroup=\"To Do Item\"\n              FormGroupFor=\"ToDoItem\"\n              FormGroupInfo=\"(required)\"\n            >\n              <span>To Do Item</span>\n              <InputGroup\n                id=\"ToDoItem\"\n                onChange={handleChange}\n                name=\"text\"\n                type=\"text\"\n                placeholder=\"Item Details\"\n              />\n            </FormGroup>\n\n            <FormGroup\n              helperText=\"Assigned To\"\n              FormGroup=\"Assigned To\"\n              FormGroupFor=\"Assigned To\"\n              FormGroupInfo=\"(required)\"\n            >\n              <InputGroup\n                onChange={handleChange}\n                name=\"assignee\"\n                type=\"text\"\n                placeholder=\"Assignee Name\"\n              />\n            </FormGroup>\n\n            <FormGroup\n              helperText=\"Difficulty\"\n              FormGroup=\"Difficulty\"\n              FormGroupFor=\"Difficulty\"\n              FormGroupInfo=\"(required)\"\n            >\n              <InputGroup\n                onChange={(e) => {\n                  setRange(e.target.value);\n                  handleChange(e);\n                }}\n                value={range}\n                type=\"range\"\n                min={1}\n                max={5}\n                name=\"difficulty\"\n                placeholder=\"Difficulty\"\n              />\n            </FormGroup>\n\n            <Button type=\"submit\">Add Item</Button>\n          </form>\n        </div>\n        <div className=\"todo-list\">\n          <List\n            list={list}\n            toggleComplete={toggleComplete}\n            setIncomplete={setIncomplete}\n            incomplete={incomplete}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ToDo;\n","import { Alignment, Navbar } from \"@blueprintjs/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <Navbar\n      className=\"bp3-navbar\"\n      style={{ height: \"4rem\", backgroundColor: \"#227BFF\" }}\n      align={Alignment.LEFT}\n    >\n      <Navbar.Heading\n        className=\"bp3-navbar-group bp3-align-left\"\n        style={{ fontSize: \"1.5rem\" }}\n      >\n        <Link style={{ color: \"#fff\" }} to=\"/\">\n          home\n        </Link>\n      </Navbar.Heading>\n      <Navbar.Heading\n        className=\"bp3-navbar-group bp3-align-left\"\n        style={{ fontSize: \"1.5rem\" }}\n      >\n        <Link style={{ color: \"#fff\" }} to=\"/settings\">\n          settings\n        </Link>\n      </Navbar.Heading>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import React, { useContext } from \"react\";\nimport {\n  FlexboxGrid,\n  Form,\n  List,\n  Panel,\n  SelectPicker,\n  Slider,\n  Toggle,\n} from \"rsuite\";\nimport { settingContext } from \"../../context/Settings\";\nimport \"rsuite/dist/rsuite.min.css\";\nconst data = [\n  {\n    label: \"assigned\",\n    value: \"assigned\",\n    role: \"assigned\",\n  },\n  {\n    label: \"id\",\n    value: \"id\",\n    role: \"id\",\n  },\n  {\n    label: \"difficulty\",\n    value: \"difficulty\",\n    role: \"difficulty\",\n  },\n];\n\nfunction Settings() {\n  const { state, dispatch } = useContext(settingContext);\n  return (\n    <div>\n      <FlexboxGrid justify=\"space-around\" align=\"middle\">\n        <FlexboxGrid.Item colspan={9}>\n          <Form\n            fluid\n            style={{ marginTop: \"10px\" }}\n            onSubmit={(e) => {\n              e.preventDefault();\n            }}\n          >\n            <Form.Group controlId=\"filter\">\n              <Form.ControlLabel>Filter by: </Form.ControlLabel>\n              <SelectPicker\n                data={data}\n                style={{ width: 224 }}\n                name=\"filter\"\n                onChange={(e) => {\n                  dispatch({ type: \"defaultSortField\", payload: e });\n                }}\n                value={state.defaultSortField}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"display\">\n              <Form.ControlLabel>display complete To Do: </Form.ControlLabel>\n\n              <Toggle\n                onChange={(e) => {\n                  dispatch({ type: \"display\", payload: e });\n                }}\n                name={\"display\"}\n                checked={state.display}\n                value={state.display}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"slider\">\n              <Form.ControlLabel>show Item: </Form.ControlLabel>\n              <Slider\n                min={1}\n                step={1}\n                max={10}\n                graduated\n                progress\n                renderMark={(mark) => {\n                  return mark;\n                }}\n                value={state.numberOfItems}\n                onChange={(e) => {\n                  dispatch({ type: \"numberOfItems\", payload: e });\n                }}\n                name=\"slider\"\n              />\n            </Form.Group>\n          </Form>\n        </FlexboxGrid.Item>\n        <FlexboxGrid.Item colspan={6}>\n          <Panel header=\"your settings\" bordered>\n            <List size=\"sm\">\n              <List.Item key={3} index={3}>\n                sort by: {state.defaultSortField}\n              </List.Item>\n              <List.Item key={1} index={1}>\n                display complete To Do: {state.display ? \"✔️\" : \"❌\"}\n              </List.Item>\n              <List.Item key={2} index={2}>\n                number of Todo's in the same label: {state.numberOfItems}\n              </List.Item>\n            </List>\n          </Panel>\n        </FlexboxGrid.Item>\n      </FlexboxGrid>\n    </div>\n  );\n}\n\nexport default Settings;\n","import React from \"react\";\nimport ToDo from \"./components/todo/todo\";\nimport Settings from \"./context/Settings\";\nimport \"./app.scss\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport SettingsPage from \"./components/todo/settings\";\nimport \"rsuite/styles/index.less\"; // or 'rsuite/dist/rsuite.min.css'\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Header />\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <Settings>\n                <ToDo />\n              </Settings>\n            }\n          />\n          <Route\n            path=\"/settings\"\n            element={\n              <Settings>\n                <SettingsPage />\n              </Settings>\n            }\n          />\n        </Routes>\n      </BrowserRouter>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}