{"version":3,"sources":["hooks/form.js","context/Settings.jsx","api/todoApi.js","context/AuthContext.jsx","components/auth/Auth.jsx","components/todo/todo-component/List.jsx","components/todo/todo-component/TodoForm.jsx","components/todo/todo.jsx","components/auth/Login.jsx","components/auth/Sign.jsx","components/Header.jsx","components/todo/settings.jsx","app.js","index.js"],"names":["useForm","callback","useState","values","setValues","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","settingContext","React","createContext","settings","display","numberOfItems","defaultSortField","reducer","state","action","type","payload","Settings","props","useReducer","dispatch","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","Provider","children","axios","create","baseURL","todoApiWithToken","headers","Authorization","cookie","load","authContext","AuthComponents","loggedIn","can","user","capability","capabilities","includes","login","logout","setLoginState","sigIn","setState","username","password","a","todoApi","post","Base64","encode","validateToken","data","token","console","log","jwt","verify","process","e","email","role","save","qs","URLSearchParams","window","location","search","cookieToken","get","Auth","context","useContext","isLoggedIn","canDo","okToRender","condition","List","list","toggleComplete","setIncomplete","incomplete","deleteItem","auth","pagination","setPagination","renderList","item","interactive","elevation","Elevation","TWO","style","width","maxHeight","minHeight","margin","text","Button","onClick","put","id","complete","className","disabled","assignee","difficulty","color","appearance","delete","incompleteCount","filter","length","document","title","arr","sort","b","slice","map","makeListArray","number","filtered","btn","i","push","makePagination","TodoForm","range","setRange","onSubmit","helperText","FormGroup","FormGroupFor","FormGroupInfo","onChange","placeholder","min","max","ToDo","setList","ac","uuid","Date","getTime","todoFormProps","listItem","height","marginTop","align","Alignment","LEFT","Heading","fontSize","items","Login","createNewUser","Form","layout","Group","controlId","ControlLabel","Control","autoComplete","styles","justifyContent","alignItems","label","SigIn","Panel","SelectPicker","placement","ButtonToolbar","Header","newUser","backgroundColor","to","Sign","FlexboxGrid","justify","Item","colspan","fluid","Toggle","checked","Slider","step","graduated","progress","renderMark","mark","header","bordered","size","index","App","path","element","Component","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.8c92cb6a.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst useForm = (callback) => {\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues((values) => ({\n      ...values,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n","import React, { useEffect, useReducer } from \"react\";\nexport const settingContext = React.createContext();\nexport const settings = {\n  display: true,\n  numberOfItems: 2,\n  defaultSortField: \"id\",\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"display\":\n      return { ...state, display: action.payload };\n    case \"numberOfItems\":\n      return { ...state, numberOfItems: action.payload };\n    case \"defaultSortField\":\n      return { ...state, defaultSortField: action.payload };\n    default:\n      return state;\n  }\n};\nconst Settings = (props) => {\n  const [state, dispatch] = useReducer(reducer, {});\n  useEffect(() => {\n    const { display, numberOfItems, defaultSortField } =\n      JSON.parse(localStorage.getItem(\"settings\")) || settings;\n    dispatch({ type: \"numberOfItems\", payload: numberOfItems });\n    dispatch({ type: \"display\", payload: display });\n    dispatch({ type: \"defaultSortField\", payload: defaultSortField });\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"settings\", JSON.stringify(state));\n  }, [state]);\n  return (\n    <settingContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </settingContext.Provider>\n  );\n};\n\nexport default Settings;\n","import axios from \"axios\";\nimport cookie from \"react-cookies\";\n\nexport default axios.create({\n  baseURL: \"https://todo-jallad.herokuapp.com\",\n});\n\nexport const todoApiWithToken = axios.create({\n  baseURL: \"https://todo-jallad.herokuapp.com\",\n  headers: {\n    Authorization: `bearer ${cookie.load(\"auth\")}`,\n  },\n});\n","import React from \"react\";\nimport cookie from \"react-cookies\";\nimport jwt from \"jsonwebtoken\";\nimport { createContext } from \"react\";\nimport todoApi from \"../api/todoApi\";\nexport const authContext = createContext();\nimport { Base64 } from \"js-base64\";\n\nconst AuthComponents = (props) => {\n  const [state, setState] = React.useState({\n    loggedIn: false,\n    can,\n    login,\n    logout,\n    sigIn,\n    user: { capabilities: [] },\n  });\n  function can(user, capability) {\n    return user?.capabilities?.includes(capability);\n  }\n\n  async function login(username, password) {\n    try {\n      const myToken = await todoApi.post(\n        \"/sign-in\",\n        {},\n        {\n          headers: {\n            Authorization: `Basic ${Base64.encode(username + \":\" + password)}`,\n          },\n        }\n      );\n\n      validateToken(myToken.data.token);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function logout() {\n    setLoginState(false, null, {});\n  }\n\n  function validateToken(token) {\n    try {\n      let user = jwt.verify(token, process.env.REACT_APP_SECRET);\n\n      setLoginState(true, token, user);\n    } catch (e) {\n      setLoginState(false, null, {});\n      console.log(\"Token Validation Error\", e);\n    }\n  }\n\n  async function sigIn(username, password, email, role) {\n    try {\n      const newUser = await todoApi.post(\"/sign-up\", {\n        username,\n        password,\n        email,\n        role,\n      });\n\n      validateToken(newUser.data.token);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function setLoginState(loggedIn, token, user) {\n    cookie.save(\"auth\", token);\n    setState({ ...state, token, loggedIn, user });\n  }\n\n  React.useEffect(() => {\n    const qs = new URLSearchParams(window.location.search);\n    const cookieToken = cookie.load(\"auth\");\n    const token = qs.get(\"token\") || cookieToken || null;\n    validateToken(token);\n  }, []);\n\n  return (\n    <authContext.Provider value={state}>{props.children}</authContext.Provider>\n  );\n};\n\nexport default AuthComponents;\n","import React from \"react\";\nimport { When } from \"react-if\";\n\nimport { authContext } from \"../../context/AuthContext.jsx\";\n\nconst Auth = (props) => {\n  const context = React.useContext(authContext);\n  const isLoggedIn = context.loggedIn;\n  const canDo = props.capability\n    ? context.can(context.user, props.capability)\n    : true;\n  const okToRender = isLoggedIn && canDo;\n  return <When condition={okToRender}>{props.children}</When>;\n};\n\nexport default Auth;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { settingContext } from \"../../../context/Settings\";\nimport { Card, Elevation } from \"@blueprintjs/core\";\n\nimport { authContext } from \"../../../context/AuthContext\";\nimport { todoApiWithToken } from \"../../../api/todoApi\";\nimport \"rsuite/dist/rsuite.min.css\";\nimport Auth from \"../../auth/Auth\";\nimport { If, Else, Then } from \"react-if\";\nimport { Button } from \"rsuite\";\nfunction List({ list, toggleComplete, setIncomplete, incomplete, deleteItem }) {\n  const settings = useContext(settingContext);\n  const auth = useContext(authContext);\n  const [pagination, setPagination] = useState(settings.state.numberOfItems);\n  const renderList = (item) => {\n    return (\n      <Card\n        interactive={true}\n        elevation={Elevation.TWO}\n        key={item.id}\n        style={{\n          width: \"100%\",\n          maxHeight: \"80%\",\n          minHeight: \"40%\",\n          margin: \"0.5rem\",\n        }}\n        aria-label={`${item.text}`}\n      >\n        <If condition={auth.can(auth.user, \"update\")}>\n          <Then>\n            <Button\n              onClick={async () => {\n                await todoApiWithToken.put(\"/todo/\" + item.id, {\n                  complete: !item.complete,\n                });\n                toggleComplete(item.id);\n              }}\n              className={`${\n                item.complete ? \"Complete\" : \"notComplete\"\n              } isComplete`}\n            >\n              <span>{item.complete ? \"Complete\" : \"pending\"}</span>\n            </Button>\n          </Then>\n          <Else>\n            <Button\n              disabled\n              className={`${\n                item.complete ? \"Complete\" : \"notComplete\"\n              } isComplete`}\n            >\n              <span>{item.complete ? \"Complete\" : \"pending\"}</span>\n            </Button>\n          </Else>\n        </If>\n\n        <p className={\"assignee\"}>{item.assignee}</p>\n        <p className={\"task\"}>{item.text}</p>\n        <p className=\"Difficulty\">\n          <small>Difficulty: {item.difficulty}</small>\n        </p>\n        <Auth capability=\"delete\">\n          <Button\n            color=\"red\"\n            appearance=\"primary\"\n            onClick={async () => {\n              deleteItem(item.id);\n              await todoApiWithToken.delete(\"/todo/\" + item.id);\n            }}\n          >\n            Delete\n          </Button>\n        </Auth>\n      </Card>\n    );\n  };\n  const makePagination = (list, number, filtered) => {\n    const btn = [];\n    let arr = [];\n    if (filtered) arr = list.filter((item) => item.complete === false);\n    else arr = list;\n    for (let i = 0; i < arr.length / number; i++) {\n      btn.push(\n        <Button\n          color=\"green\"\n          appearance={`${pagination / number === i + 1 ? \"primary\" : \"subtle\"}`}\n          key={i}\n          onClick={() => {\n            setPagination((i + 1) * number);\n          }}\n        >\n          {i + 1}\n        </Button>\n      );\n    }\n    return btn;\n  };\n  function makeListArray(list, settings) {\n    let arr = [];\n    if (settings.state.display) {\n      arr = list\n        .sort(\n          (a, b) =>\n            a[settings.state.defaultSortField] -\n            b[settings.state.defaultSortField]\n        )\n        .slice(pagination - settings.state.numberOfItems, pagination)\n        .map((item) => renderList(item));\n    } else {\n      arr = list\n        .filter((item) => !item.complete)\n        .sort(\n          (a, b) =>\n            a[settings.state.defaultSortField] -\n            b[settings.state.defaultSortField]\n        )\n        .slice(pagination - settings.state.numberOfItems, pagination)\n        .map((item) => renderList(item));\n    }\n    return arr;\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter((item) => !item.complete);\n    setIncomplete(incompleteCount.length);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n\n  useEffect(() => {\n    setPagination(settings.state.numberOfItems);\n  }, [settings.state.numberOfItems]);\n\n  const arr = makeListArray(list, settings);\n  useEffect(() => {\n    if (arr.length === 0 && pagination > settings.state.numberOfItems) {\n      setPagination(pagination - settings.state.numberOfItems);\n    }\n  }, [arr.length]);\n  return (\n    <div>\n      {arr}\n      {/* {setPagination(arr.length ===  ) } */}\n      <div>\n        {makePagination(\n          list.sort(\n            (a, b) =>\n              a[settings.state.defaultSortField] -\n              b[settings.state.defaultSortField]\n          ),\n          settings.state.numberOfItems,\n          !settings.state.display\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default List;\n","import React from \"react\";\nimport { Button, FormGroup, InputGroup } from \"@blueprintjs/core\";\n\nfunction TodoForm({ handleChange, handleSubmit, range, setRange }) {\n  return (\n    <div>\n      <form onSubmit={handleSubmit} aria-label=\"todo-form\">\n        <h2>Add To Do Item</h2>\n        <FormGroup\n          helperText=\"To Do Item details...\"\n          FormGroup=\"To Do Item\"\n          FormGroupFor=\"ToDoItem\"\n          FormGroupInfo=\"(required)\"\n        >\n          <span>To Do Item</span>\n          <InputGroup\n            id=\"ToDoItem\"\n            onChange={handleChange}\n            name=\"text\"\n            type=\"text\"\n            placeholder=\"Item Details\"\n            aria-label=\"text\"\n          />\n        </FormGroup>\n\n        <FormGroup\n          helperText=\"Assigned To\"\n          FormGroup=\"Assigned To\"\n          FormGroupFor=\"Assigned To\"\n          FormGroupInfo=\"(required)\"\n        >\n          <InputGroup\n            onChange={handleChange}\n            name=\"assignee\"\n            type=\"text\"\n            placeholder=\"Assignee Name\"\n            aria-label=\"assignee\"\n          />\n        </FormGroup>\n\n        <FormGroup\n          helperText=\"Difficulty\"\n          FormGroup=\"Difficulty\"\n          FormGroupFor=\"Difficulty\"\n          FormGroupInfo=\"(required)\"\n        >\n          <InputGroup\n            onChange={(e) => {\n              setRange(e.target.value);\n              handleChange(e);\n            }}\n            value={range}\n            type=\"range\"\n            min={1}\n            max={5}\n            name=\"difficulty\"\n            placeholder=\"Difficulty\"\n            aria-label=\"range\"\n          />\n        </FormGroup>\n        <Button type=\"submit\">Add Item</Button>\n      </form>\n    </div>\n  );\n}\n\nexport default TodoForm;\n","import React, { useEffect, useState } from \"react\";\nimport useForm from \"../../hooks/form.js\";\nimport \"./todo.scss\";\nimport { v4 as uuid } from \"uuid\";\nimport List from \"./todo-component/List\";\nimport { Alignment, Navbar } from \"@blueprintjs/core\";\nimport TodoForm from \"./todo-component/TodoForm.jsx\";\nimport Auth from \"../auth/Auth.jsx\";\nimport { todoApiWithToken } from \"../../api/todoApi.js\";\nimport { authContext as ac } from \"../../context/AuthContext.jsx\";\n\nconst ToDo = () => {\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const [range, setRange] = useState(3);\n  const { handleChange, handleSubmit } = useForm(addItem);\n  const authContext = React.useContext(ac); // Todo - useContext is deprecated\n\n  async function addItem(item) {\n    try {\n      item.id = uuid() + new Date().getTime();\n      item.complete = false;\n      item.difficulty = item.difficulty ? item.difficulty : range;\n      await todoApiWithToken.post(\"/todo\", item, {});\n      setList([...list, item]);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function deleteItem(id) {\n    const items = list.filter((item) => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n    const items = list.map((item) => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n  }\n  const todoFormProps = {\n    handleChange,\n    handleSubmit,\n    range,\n    setRange,\n  };\n  useEffect(() => {\n    (async () => {\n      try {\n        const listItem = await todoApiWithToken.get(\"/todo\");\n        setList(listItem.data);\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, []);\n  return (\n    <>\n      <Navbar\n        className=\"bp3-navbar bp3-dark\"\n        style={{\n          height: \"4rem\",\n          margin: \"0 auto\",\n          width: \"80%\",\n          marginTop: \"1rem\",\n        }}\n        align={Alignment.LEFT}\n      >\n        <Navbar.Heading\n          className=\"bp3-navbar-group bp3-align-left\"\n          style={{ fontSize: \"1.5rem\" }}\n        >\n          To Do List: {incomplete} items pending\n        </Navbar.Heading>\n      </Navbar>\n      <div className=\"todo-container\">\n        <div className=\"todo-form\">\n          <Auth capability=\"create\">\n            <TodoForm {...todoFormProps} />\n          </Auth>\n        </div>\n        <div className=\"todo-list\">\n          <List\n            list={list}\n            toggleComplete={toggleComplete}\n            setIncomplete={setIncomplete}\n            incomplete={incomplete}\n            deleteItem={deleteItem}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from \"react\";\nimport { When } from \"react-if\";\nimport { Button, Form } from \"rsuite\";\nimport { authContext } from \"../../context/AuthContext\";\n\nconst Login = ({ createNewUser }) => {\n  const context = React.useContext(authContext);\n  const [state, setState] = React.useState({ username: \"\", password: \"\" });\n\n  const handleChange = (e, name) => {\n    setState({ ...state, [name]: e });\n  };\n\n  const handleSubmit = (e) => {\n    context.login(state.username, state.password);\n  };\n  return (\n    <>\n      <When condition={context.loggedIn}>\n        <Button onClick={context.logout}>Log Out</Button>\n      </When>\n\n      <When condition={!context.loggedIn}>\n        <Form layout=\"inline\" onSubmit={handleSubmit}>\n          <Form.Group controlId=\"username\">\n            <Form.ControlLabel>Username</Form.ControlLabel>\n            <Form.Control\n              style={{ width: 160 }}\n              placeholder=\"UserName\"\n              name=\"username\"\n              onChange={(e) => handleChange(e, \"username\")}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.ControlLabel>Password</Form.ControlLabel>\n            <Form.Control\n              name=\"password\"\n              autoComplete=\"off\"\n              style={{ width: 160 }}\n              placeholder=\"password\"\n              type={context.loggedIn ? \"text\" : \"password\"}\n              onChange={(e) => handleChange(e, \"password\")}\n            />\n          </Form.Group>\n\n          <Button type=\"submit\">Login</Button>\n          <Button onClick={() => createNewUser(false)}>Sign in</Button>\n        </Form>\n      </When>\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { When } from \"react-if\";\nimport { Button, ButtonToolbar, Form, Panel, SelectPicker } from \"rsuite\";\nimport { authContext } from \"../../context/AuthContext\";\nconst styles = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\nconst data = [\n  {\n    label: \"admin\",\n    value: \"admin\",\n    role: \"admin\",\n  },\n  {\n    label: \"writer\",\n    value: \"writer\",\n    role: \"writer\",\n  },\n  {\n    label: \"editor\",\n    value: \"editor\",\n    role: \"editor\",\n  },\n  {\n    label: \"user\",\n    value: \"user\",\n    role: \"user\",\n  },\n];\n\nconst SigIn = ({ createNewUser }) => {\n  const context = React.useContext(authContext);\n  const [state, setState] = React.useState({\n    username: \"\",\n    password: \"\",\n    email: \"\",\n    role: \"user\",\n  });\n\n  const handleChange = (e, name) => {\n    setState({ ...state, [name]: e });\n  };\n\n  const handleSubmit = (e) => {\n    context.sigIn(state.username, state.password, state.email, state.role);\n  };\n  return (\n    <>\n      <When condition={!context.loggedIn}>\n        <Panel style={{ ...styles }}>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"name\">\n              <Form.ControlLabel>Username</Form.ControlLabel>\n              <Form.Control\n                name=\"username\"\n                onChange={(e) => handleChange(e, \"username\")}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.ControlLabel style={{ color: \"#000\" }}>\n                email\n              </Form.ControlLabel>\n              <Form.Control\n                name=\"email\"\n                onChange={(e) => handleChange(e, \"email\")}\n                type=\"text\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"filter\">\n              <Form.ControlLabel style={{ color: \"#000\" }}>\n                Role{\" \"}\n              </Form.ControlLabel>\n              <SelectPicker\n                placement=\"leftStart\"\n                data={data}\n                style={{ width: 224 }}\n                name=\"filter\"\n                onChange={(e) => handleChange(e, \"role\")}\n                value={state.role}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"password\">\n              <Form.ControlLabel style={{ color: \"#000\" }}>\n                Password\n              </Form.ControlLabel>\n              <Form.Control\n                name=\"password\"\n                onChange={(e) => handleChange(e, \"password\")}\n                type=\"password\"\n                autoComplete=\"off\"\n              />\n            </Form.Group>\n            <Form.Group>\n              <ButtonToolbar>\n                <Button appearance=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n                <Button\n                  appearance=\"default\"\n                  onClick={() => createNewUser(true)}\n                >\n                  Cancel\n                </Button>\n              </ButtonToolbar>\n            </Form.Group>\n          </Form>\n        </Panel>\n      </When>\n    </>\n  );\n};\n\nexport default SigIn;\n","import { Alignment, Navbar } from \"@blueprintjs/core\";\nimport React from \"react\";\nimport { Else, If, Then } from \"react-if\";\nimport { Link } from \"react-router-dom\";\nimport Login from \"./auth/Login\";\nimport Sign from \"./auth/Sign\";\n\nfunction Header() {\n  const [newUser, createNewUser] = React.useState(true);\n  return (\n    <Navbar\n      className=\"bp3-navbar\"\n      style={{ height: \"4rem\", backgroundColor: \"#227BFF\" }}\n      align={Alignment.LEFT}\n    >\n      <Navbar.Heading\n        className=\"bp3-navbar-group bp3-align-left\"\n        style={{ fontSize: \"1.5rem\" }}\n      >\n        <Link style={{ color: \"#fff\" }} to=\"/\">\n          home\n        </Link>\n      </Navbar.Heading>\n      <Navbar.Heading\n        className=\"bp3-navbar-group bp3-align-left\"\n        style={{ fontSize: \"1.5rem\" }}\n      >\n        <Link style={{ color: \"#fff\" }} to=\"/settings\">\n          settings\n        </Link>\n      </Navbar.Heading>\n      <Navbar.Heading\n        className=\"bp3-navbar-group bp3-align-right\"\n        style={{ color: \"#fff\", alignItems: \"baseline\" }}\n      >\n        <If condition={newUser}>\n          <Then>\n            <Login createNewUser={createNewUser} />\n          </Then>\n          <Else>\n            <Sign createNewUser={createNewUser} />\n          </Else>\n        </If>\n      </Navbar.Heading>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import React, { useContext } from \"react\";\nimport {\n  FlexboxGrid,\n  Form,\n  List,\n  Panel,\n  SelectPicker,\n  Slider,\n  Toggle,\n} from \"rsuite\";\nimport { settingContext, settings } from \"../../context/Settings\";\nimport \"rsuite/dist/rsuite.min.css\";\nconst data = [\n  {\n    label: \"assigned\",\n    value: \"assigned\",\n    role: \"assigned\",\n  },\n  {\n    label: \"id\",\n    value: \"id\",\n    role: \"id\",\n  },\n  {\n    label: \"difficulty\",\n    value: \"difficulty\",\n    role: \"difficulty\",\n  },\n];\n\nfunction Settings() {\n  const { state, dispatch } = useContext(settingContext);\n  return (\n    <div>\n      <FlexboxGrid justify=\"space-around\" align=\"middle\">\n        <FlexboxGrid.Item colspan={9}>\n          <Form\n            fluid\n            style={{ marginTop: \"10px\" }}\n            onSubmit={(e) => {\n              e.preventDefault();\n            }}\n          >\n            <Form.Group controlId=\"filter\">\n              <Form.ControlLabel>Filter by: </Form.ControlLabel>\n              <SelectPicker\n                data={data}\n                style={{ width: 224 }}\n                name=\"filter\"\n                onChange={(e) => {\n                  dispatch({ type: \"defaultSortField\", payload: e });\n                }}\n                value={state.defaultSortField || settings.defaultSortField}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"display\">\n              <Form.ControlLabel>display complete To Do: </Form.ControlLabel>\n              <Toggle\n                onChange={(e) => {\n                  dispatch({ type: \"display\", payload: e });\n                }}\n                name={\"display\"}\n                checked={state.display}\n                value={state.display || settings.display}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"slider\">\n              <Form.ControlLabel>show Item: </Form.ControlLabel>\n              <Slider\n                data-testid=\"slider\"\n                min={1}\n                step={1}\n                max={10}\n                graduated\n                progress\n                renderMark={(mark) => {\n                  return mark;\n                }}\n                value={state.numberOfItems || settings.numberOfItems}\n                onChange={(e) => {\n                  dispatch({ type: \"numberOfItems\", payload: e });\n                }}\n                name=\"slider\"\n              />\n            </Form.Group>\n          </Form>\n        </FlexboxGrid.Item>\n\n        <FlexboxGrid.Item colspan={6}>\n          <Panel header=\"your settings\" bordered>\n            <List size=\"sm\">\n              <List.Item key={3} index={3}>\n                sort by: {state.defaultSortField}\n              </List.Item>\n              <List.Item key={1} index={1}>\n                display complete To Do: {state.display ? \"✔️\" : \"❌\"}\n              </List.Item>\n              <List.Item key={2} index={2}>\n                number of Todo's in the same label: {state.numberOfItems}\n              </List.Item>\n            </List>\n          </Panel>\n        </FlexboxGrid.Item>\n      </FlexboxGrid>\n    </div>\n  );\n}\n\nexport default Settings;\n","import React from \"react\";\nimport ToDo from \"./components/todo/todo\";\nimport Settings from \"./context/Settings\";\nimport LoginContext from \"./context/AuthContext.jsx\";\nimport \"./app.scss\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport SettingsPage from \"./components/todo/settings\";\nimport \"rsuite/styles/index.less\"; // or 'rsuite/dist/rsuite.min.css'\nimport Auth from \"./components/auth/Auth\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <LoginContext>\n          <Header />\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <Auth>\n                  <Settings>\n                    <ToDo />\n                  </Settings>\n                </Auth>\n              }\n            />\n            <Route\n              path=\"/settings\"\n              element={\n                <Auth>\n                  <Settings>\n                    <SettingsPage />\n                  </Settings>\n                </Auth>\n              }\n            />\n          </Routes>\n        </LoginContext>\n      </BrowserRouter>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}